import moment from 'moment';
import { faker } from '@faker-js/faker';

export interface CreateVulnerabilitiesParams {
  username?: string;
  hostname?: string;
  space?: string;
}
export default function createVulnerabilities({
  username = 'user-1',
  hostname = 'host-1',
  space = 'default',
}: CreateVulnerabilitiesParams) {
  const now = moment().format('yyyy-MM-DDTHH:mm:ss.SSSSSSZ');
  const dataset = 'cloud_security_posture.vulnerabilities';
  return {
    '@timestamp': now,
    user: {
      name: username,
    },
    agent: {
      ephemeral_id: faker.string.uuid(),
      id: faker.string.uuid(),
      name: 'ip-172-31-41-123.eu-west-1.compute.internal',
      type: 'cloudbeat',
      version: '9.1.2',
    },
    cloud: {
      Security: {
        security_groups: {
          group_id: faker.string.uuid(),
          group_name: `terraform-${faker.string.alphanumeric(26)}`,
        },
      },
      Tags: {
        Name: 'test-env-kspm-20p',
        deployment: 'test-env-kspm',
        division: 'engineering',
        ec2_type: 'kspm',
        id: faker.string.uuid(),
        org: 'security',
        owner: 'cloudbeat',
        project: 'test-env',
        provisioner: 'terraform',
        team: 'cloud-security-posture',
      },
      account: {
        id: faker.string.numeric(12),
        name: 'cloud-security-tests',
      },
      availability_zone: 'eu-west-1a',
      instance: {
        id: faker.string.uuid(),
        name: 'test-env-kspm-3Oj',
      },
      machine: {
        Authentication: {
          key: `cloudbeat-generated-${faker.string.uuid()}`,
        },
        Image: `ami-${faker.string.uuid()}`,
        Launch_time: now,
        type: 'c5.4xlarge',
      },
      provider: 'aws',
      region: 'eu-west-1',
      service: {
        name: 'AWS EC2',
      },
    },
    cloud_security_posture: {
      package_policy: {
        id: faker.string.uuid(),
        revision: 16,
      },
    },
    cloudbeat: {
      commit_time: '0001-01-01T00:00:00.000Z',
      version: '9.1.2',
    },
    data_stream: {
      dataset,
      namespace: space,
      type: 'logs',
    },
    ecs: {
      version: '8.6.0',
    },
    elastic_agent: {
      id: faker.string.uuid(),
      version: '9.1.2',
      snapshot: false,
    },
    event: {
      agent_id_status: 'verified',
      category: ['vulnerability'],
      created: now,
      dataset,
      id: faker.string.uuid(),
      ingested: now,
      kind: 'state',
      outcome: 'success',
      sequence: 1756996222,
      type: ['info'],
    },
    host: {
      architecture: 'x86_64',
      name: hostname,
      os: {
        platform: 'Linux/UNIX',
      },
    },
    network: {
      Mac_addresses: [faker.internet.mac()],
      Private_ip: faker.internet.ip(),
      Public_ip: faker.internet.ip(),
    },
    observer: {
      vendor: 'Elastic',
    },
    package: {
      fixed_version: '1.23.12, 1.24.6',
      name: 'stdlib',
      path: `var/snap/docker/common/var-lib-docker/volumes/${faker.string.uuid()}/_data/lib/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots/28/fs/usr/share/elastic-agent/data/elastic-agent-5f1123/elastic-agent`,
      type: 'gobinary',
      version: 'v1.24.4',
    },
    resource: {
      id: faker.string.uuid(),
      name: hostname,
    },
    vulnerability: {
      category: 'lang-pkgs',
      class: 'lang-pkgs',
      classification: 'CVSS',
      cvss: {
        bitnami: {
          V3Vector: 'CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:L',
          V3Score: 7,
        },
        redhat: {
          V3Vector: 'CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:L',
          V3Score: 7,
        },
      },
      data_source: {
        ID: 'govulndb',
        Name: 'The Go Vulnerability Database',
        URL: 'https://pkg.go.dev/vuln/',
      },
      description:
        'Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.',
      enumeration: 'CVE',
      id: 'CVE-2025-47907',
      package: {
        fixed_version: '1.23.12, 1.24.6',
        name: 'stdlib',
        version: 'v1.24.4',
      },
      published_date: '2025-08-07T16:15:30.357Z',
      reference: 'https://avd.aquasec.com/nvd/cve-2025-47907',
      report_id: '1.756996211E9',
      scanner: {
        vendor: 'Trivy',
        version: 'v0.35.0',
      },
      score: {
        base: 7,
        version: '3.1',
      },
      severity: faker.helpers.arrayElement([
        'HIGH',
        'LOW',
        'MEDIUM',
        'CRITICAL',
      ]),

      title: 'database/sql: Postgres Scan Race Condition',
    },
  };
}
